<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 设置页面不登陆也可以访问 -->
    <http pattern="/**.html" security="none"></http>
    <http pattern="/static/admin/**" security="none"></http>
    <http pattern="/static/css/**" security="none"></http>
    <http pattern="/static/js/**" security="none"></http>
    <http pattern="/static/plugins/**" security="none"></http>
    <http pattern="/seller/add" security="none"></http>

    <!-- 页面的拦截规则    use-expressions:是否启动SPEL表达式 默认是true -->
    <http use-expressions="false">
        <!-- 当前用户必须有ROLE_USER的角色 才可以访问根目录及所属子目录的资源 -->
        <!--<intercept-url pattern="/static/js/plugins/upload" access="ROLE_USER"/>-->
        <!--<intercept-url pattern="/**" access="ROLE_SELLER"/>-->
        <!-- 开启表单登陆功能 -->
        <form-login login-page="/shoplogin.html" default-target-url="/admin/index.html"
                    authentication-failure-url="/shoplogin.html" always-use-default-target="true"/>
        <csrf disabled="true"/>
        <!--添加退出url
        logout-url:退出的地址，会自动生成
        logout-success-url:退出后跳转的地址
        -->
        <logout/>
        <!--内置框架页-->
        <headers>
            <frame-options policy="SAMEORIGIN"></frame-options>
        </headers>
    </http>

    <!-- 认证管理器 -->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
            <password-encoder ref="bcryptEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!--BCrypt算法进行加密-->
    <beans:bean id="bcryptEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans:beans>